@use "variables";

@mixin counter-reset-start($max: 20) {
  @for $i from 1 through $max {
    &[start="#{$i}"] {
      counter-reset: item #{$i - 1};
    }
  }
}

body,
html {
  margin: 0;
  font-family: "Twemoji Country Flags", "Nunito", "Inter", sans-serif;
  background-color: var(--bg);
  color: var(--text);
  min-height: 100%;
  background-image: var(--gradient-hero);
  background-attachment: fixed;
  background-size: cover;
}

main {
  max-width: 100%;
  padding-bottom: 1rem;
  flex: 1 0 auto;
  display: block;
  transition: opacity .2s ease, transform .2s ease;
}

// Credits to https://github.com/rudrodip/theme-toggle-effect
:root.theme-transition::view-transition-group(root) {
  animation-timing-function: linear(
    0 0%,
    0.1 2%,
    0.2 5%,
    0.3 10%,
    0.4 25%,
    0.5 35%,
    0.6 50%,
    0.7 65%,
    0.8 80%,
    0.9 90%,
    1 100%
  );
}

:root.theme-transition::view-transition-new(root) {
  mask: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 40 40'><circle cx='40' cy='0' r='20' fill='white'/></svg>")
    top right / 0 no-repeat;
  mask-origin: content-box;
  animation: scale 0.8s;
  animation-fill-mode: both;
  transform-origin: top right;
}

:root.theme-transition::view-transition-old(root),
:root.theme-transition.dark-mode::view-transition-old(root) {
  animation: none;
  animation-fill-mode: both;
  transform-origin: top right;
  z-index: -1;
}
:root.theme-transition.dark-mode::view-transition-new(root) {
  animation: scale 0.8s;
  animation-fill-mode: both;
}

@keyframes scale {
  to {
    mask-size: 300vmax;
  }
}

.app-bg {
  position: fixed;
  inset: 0;
  width: fit-content;
  height: fit-content;
  pointer-events: none;
  z-index: -2;
}

.app-bg::before {
  content: "";
  position: absolute;
  inset: -10lvh;
  background: var(--gradient-hero);
  filter: blur(40px) saturate(140%);
}

.app-bg::after {
  content: "";
  position: absolute;
  inset: 0;
  background:
    radial-gradient(
      60rem 30rem at 50% -10%,
      rgb(255 255 255 / 06%),
      transparent
    ),
    radial-gradient(
      50rem 26rem at 10% 110%,
      rgb(255 255 255 / 04%),
      transparent
    );
  mix-blend-mode: overlay;
}

.glass {
  background: var(--glass-bg);
  backdrop-filter: var(--backdrop-filter);
  border: var(--glass-border);
  box-shadow: var(--glass-shadow);
}

.frost {
  background: var(--glass-bg-strong);
  backdrop-filter: var(--backdrop-filter);
  border: var(--glass-border);
  box-shadow: var(--glass-shadow);
}

.navbar-glass {
  background: rgb(from var(--surface) r g b / 40%);
  backdrop-filter: var(--backdrop-filter);
  border-bottom: 1px solid rgb(255 255 255 / 10%);
}

.ui-app-bar.navbar-glass {
  background: rgb(from var(--surface) r g b / 40%) !important;
  box-shadow: var(--glass-shadow) !important;
}

.centered-stack-home {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  gap: 1rem;
}

.centered-stack-blog {
  display: flex;
  align-items: center;
  flex-direction: column;
}

.hero {
  padding-block: clamp(1rem, 3vw, 3rem);
}

.hero-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  align-items: start;
}

.hero-left {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: sticky;
  top: 0;
  height: calc(100svh - 5rem);
}

.hero-image {
  border-radius: 24px;
  max-width: 100%;
  height: auto;
  width: 350px;
}

.hero-right {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.hero-about {
  margin-top: 0.25rem;
}

@media (max-width: 900px) {
  .hero-grid {
    grid-template-columns: 1fr;
    padding-inline: 1rem;
  }

  .hero-image {
    width: 200px;
  }

  .hero-left {
    position: static;
    height: auto;
  }
}

.gradient-text {
  background: var(--gradient-brand);
  background-clip: text;
  color: transparent;
}

*::selection {
  background: var(--primary) !important;
  color: var(--text) !important;
}

:root.dark-mode *::selection {
  background: var(--primary) !important;
  color: var(--bg) !important;
}

*::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

*::-webkit-scrollbar-track {
  background: var(--bg);
  border-radius: 10px;
}

*::-webkit-scrollbar-thumb {
  background: var(--text-light);
  border-radius: 10px;
  transition: all 0.3s ease-in-out;
}

*::-webkit-scrollbar-thumb:hover {
  background: var(--primary);
}

code,
kbd,
pre,
samp {
  font-family: "Fira Code", monospace !important;
}

a {
  color: var(--primary);
  text-decoration: none;
  transition: all 0.4s ease-in-out;
}

a:hover {
  color: var(--secondary);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

summary h1,
summary h2,
summary h3,
summary h4,
summary h5,
summary h6 {
  display: inline;
}

p,
li {
  text-wrap: pretty;
}

.markdown-body {
  width: 80%;

  @media (max-width: 600px) {
    width: 100%;
  }
}

.ui-card.glass,
.ui-app-bar.navbar-glass {
  border-radius: 16px;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
  position: relative;
  transition: text-decoration 0.3s ease-in-out;
}

.header-anchor {
  color: inherit;
}

.header-anchor:hover {
  color: inherit;
}

.markdown-body h1:hover,
.markdown-body h2:hover,
.markdown-body h3:hover,
.markdown-body h4:hover,
.markdown-body h5:hover,
.markdown-body h6:hover {
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-decoration-color: currentColor;
}

.header-copy-icon {
  position: relative;
  top: -0.4rem;
  padding-right: 1rem;
  cursor: pointer;
}

.header-copy-icon svg {
  width: 1rem;
  height: 1rem;
  overflow: visible;
  fill: var(--primary);
  color: var(--primary);
  vertical-align: middle;
  transition: fill 0.2s ease-in-out, color 0.2s ease-in-out;
}

.header-copy-icon svg:hover {
  fill: var(--success);
  color: var(--success);
}

.header-copy-icon-clicked svg {
  fill: var(--success);
  color: var(--success);
}

.markdown-body hr {
  border: 2px solid var(--gone);
  border-radius: 10px;
  margin: 1.5rem 0;
}

.markdown-body img {
  max-width: 100%;
  height: auto;

  @media (max-width: 600px) {
    max-width: 90svw;
  }
}

.markdown-body details {
  margin: 1rem 0;
}

.markdown-body summary {
  cursor: pointer;

  & > h1:hover,
  & > h2:hover,
  & > h3:hover,
  & > h4:hover,
  & > h5:hover,
  & > h6:hover {
    text-decoration: none;
  }
}

.markdown-body ul {
  list-style-position: inside;
  padding-bottom: 1rem;
}

.markdown-body .markdown-alert > ul {
  margin-left: 1.5rem;
}

.markdown-body ol {
  list-style: none;
  counter-reset: item;
  padding-bottom: 1rem;
}

.markdown-body .markdown-alert > ol {
  margin-left: 1.5rem;
}

.markdown-body ol:has(+ .code-block) {
  padding-bottom: 0rem;
}

.markdown-body ol[start] {
  @include counter-reset-start;
}

.markdown-body ol > li::before {
  content: counter(item, decimal-leading-zero) ")";
  counter-increment: item;
  font-weight: bold;
  margin-right: 0.5rem;
}

.markdown-body ul > li > ul > li {
  margin-left: 1.5rem;
}

.markdown-body table {
  border-collapse: collapse;
  width: 100%;
  overflow-x: auto;
  display: contents;
}

.markdown-body table,
.markdown-body table th,
.markdown-body table td {
  border: 1px solid var(--secondary);
}

.markdown-body table th,
.markdown-body table td {
  padding: 8px;
  text-align: left;
}

.markdown-body blockquote {
  border-left: 0.25em solid var(--secondary);
  padding: 0 1rem;
  margin: 0.5rem 0;
}

.markdown-body blockquote > p {
  color: var(--text-muted);
}

.code-block {
  position: relative;
  margin: 0.5rem 0;
}

.code-block-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 1rem;
  background-color: rgb(from #0b0d0f r g b / 80%);
  border-radius: 20px 20px 0px 0px;
  font-size: 0.8rem;
  color: #e9e9f4;
  backdrop-filter: blur(8px);
}

.code-block-lang {
  font-weight: bold;
}

.copy-code-button {
  background: none;
  border: none;
  color: var(--primary);
  cursor: pointer;
  font-size: 0.85rem;
  padding: 0.2rem 0.5rem;
  transition: all 0.5s ease-in-out;
}

.copy-code-button-clicked {
  background: none;
  border: none;
  color: var(--secondary);
  cursor: pointer;
  font-size: 0.85rem;
  padding: 0.2rem 0.5rem;
  transition: all 0.5s ease-in-out;
}

.copy-code-button:hover {
  color: var(--secondary);
}

.code-block pre > code {
  margin: 0;
  border-radius: 0px 0px 20px 20px;
}

*:not(pre) > code.hljs {
  border-radius: 10px;
  padding: 0.2rem 0.5rem;
  display: inline-block;
  text-wrap: pretty;
  white-space: pre-line;
  word-break: break-all;
}

*:not(pre) > code.hljs span {
  color: inherit !important;
  font-weight: inherit;
  font-style: inherit;
}

a > code.hljs {
  color: var(--primary) !important;

  &:hover {
    color: var(--secondary) !important;
  }
}

a:not(h1 a, h2 a, h3 a, h4 a, h5 a, h6 a) > code.hljs {
  text-decoration: underline;
  text-decoration-color: var(--primary);
  text-underline-offset: 0.1rem;
  transition: all 0.4s ease-in-out;
}

a:not(h1 a, h2 a, h3 a, h4 a, h5 a, h6 a):hover > code.hljs {
  text-decoration-color: var(--secondary);
}

h1 a:hover > code.hljs,
h2 a:hover > code.hljs,
h3 a:hover > code.hljs,
h4 a:hover > code.hljs,
h5 a:hover > code.hljs,
h6 a:hover > code.hljs {
  text-decoration: underline;
  text-decoration-color: inherit;
  text-underline-offset: 0.1rem;
}

.force-nuxt-fonts-nunito {
  font-family: "Nunito";
}

.force-nuxt-fonts-inter {
  font-family: "Inter";
}

@media (max-width: 960px) {
  .markdown-body {
    width: 90svw;
  }
}

/* Reduce motion preference */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
