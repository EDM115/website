name: Update open source contributions

on:
  schedule:
    - cron: "0 4 * * 6"
  workflow_dispatch:

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Refresh contributions JSON
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs")
            const path = "src/assets/data/contributions.json"
            const contribs = JSON.parse(fs.readFileSync(path))

            console.log(`>> Found ${contribs.length} contributions to process\n`)

            for (const item of contribs) {
              console.log(`\n>> Processing ${item.link} ...`)
              const oldState = item.state
              const oldDesc = item.description

              try {
                const parts = new URL(item.link).pathname.split("/")
                const [ , owner, repo, , number ] = parts
                const num = parseInt(number, 10)

                if (item.type === "pr") {
                  const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: num })
                  item.state = pr.merged ? "merged" : pr.state
                  item.description = pr.title.replace(/`/g, "")
                } else {
                  const { data: issue } = await github.rest.issues.get({ owner, repo, issue_number: num })

                  if (issue.state === "open") {
                    item.state = "open"
                  } else {
                    item.state = issue.state_reason === "completed"
                      ? "closed"
                      : "ignored"
                  }

                  item.description = issue.title.replace(/`/g, "")
                }

                if (item.state !== oldState || item.description !== oldDesc) {
                  console.log(
                    `✅ Updated ${item.link}\n` +
                    `\tstate : "${oldState}" → "${item.state}"\n` +
                    `\tdesc :  "${oldDesc}" → "${item.description}"`
                  )
                } else {
                  console.log(`⚪ No change for ${item.link}`)
                }
              } catch (err) {
                console.log(`⚠️ Skipping ${item.link} : ${err.message}`)
                continue
              }

              console.log("")
            }

            fs.writeFileSync(path, JSON.stringify(contribs, null, 2) + "\n")

      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/assets/data/contributions.json
          git diff --cached --exit-code || (
            git commit -m "chore: weekly oss contributions update [skip ci]"
            git push
          )
